<Styles xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <Border Padding="20">
            <Border.Styles>
                <Style Selector="IconButton">
                    <Setter Property="Content" Value="Button" />
                    <Setter Property="Icon" Value="{StaticResource AddSvg}" />
                </Style>
                <Style Selector="StackPanel">
                    <Setter Property="Spacing" Value="10" />
                </Style>
            </Border.Styles>
            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <IconButton Classes="base negative" />
                    <IconButton Classes="base text-only positive" />
                    <IconButton Classes="base small text-only" />
                    <IconButton Classes="base icon-only" Content="" />
                </StackPanel>
                <StackPanel>
                    <IconButton Classes="subtle" />
                    <IconButton Classes="subtle text-only" />
                    <IconButton Classes="subtle small" />
                    <IconButton Classes="subtle icon-only" Content="" />
                </StackPanel>

                <StackPanel>
                    <IconButton Classes="action" />
                    <IconButton Classes="action text-only" />
                    <IconButton Classes="action small text-only" />
                    <IconButton Classes="action icon-only" Content="" />
                </StackPanel>
                
                <StackPanel>
                    <IconButton Classes="border" />
                    <IconButton Classes="border text-only" />
                    <IconButton Classes="border small text-only" />
                    <IconButton Classes="border icon-only" Content="" />
                </StackPanel>
            </StackPanel>
        </Border>
    </Design.PreviewWith>


    <!--  Button Styles  -->
    <Style Selector=":is(IconButton)">
        <Setter Property="Padding" Value="15 12" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style Selector=":is(IconButton).subtle">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
    </Style>

    <Style Selector=":is(IconButton).action">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryText}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryAction}" />
    </Style>

    <Style Selector=":is(IconButton).small">
        <Setter Property="Padding" Value="10 7" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="CornerRadius" Value="6" />
    </Style>
    
    <Style Selector=":is(IconButton).border">
        <Setter Property="Background" Value="{DynamicResource TertiaryBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryAction}" />
        <Setter Property="BorderThickness" Value="2" />
    </Style>


    <Style Selector=".negative /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource NegativeColor}" />
    </Style>

    <Style Selector=".positive /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PositiveColor}" />
    </Style>


    <!--  Pointerover  -->
    <Style Selector=":is(IconButton).base:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
    </Style>

    <Style Selector=":is(IconButton).subtle:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource SecondaryAction}" />
    </Style>

    <Style Selector=":is(IconButton).action:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryAction}" />
    </Style>
    
    <Style Selector=":is(IconButton).border:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryAction}" />
    </Style>

    <Style Selector=".negative:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource NegativeHoverColor}" />
    </Style>

    <Style Selector=".positive:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PositiveHoverColor}" />
    </Style>


    <Style Selector="IconButton.icon-only">
        <Setter Property="Padding" Value="8" />
        <Setter Property="Height" Value="34" />
        <Setter Property="Width" Value="34" />
    </Style>

    <Style Selector="IconButton.icon-only PathIcon">
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
    </Style>

    <Style Selector="IconButton.icon-only.small">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
    </Style>

    <Style Selector="IconButton.small PathIcon">
        <Setter Property="Height" Value="10" />
        <Setter Property="Width" Value="10" />
    </Style>

    <Style Selector="IconButton.text-only PathIcon">
        <Setter Property="IsVisible" Value="False" />
    </Style>

    <Style Selector="IconButton.text-only TextBlock">
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style Selector="IconButton.icon-only TextBlock">
        <Setter Property="IsVisible" Value="False" />
    </Style>
</Styles>
