// <auto-generated />
using System;
using InstallyAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InstallyAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250102233818_Migration01")]
    partial class Migration01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("InstallyAPI.Models.CollectionEntity", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserEntityGuid")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.HasIndex("UserEntityGuid");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("InstallyAPI.Models.PackageEntity", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CollectionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LatestVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<string>("Site")
                        .HasColumnType("TEXT");

                    b.Property<string>("TagsString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("VersionsLength")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WingetId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.HasIndex("CollectionId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("InstallyAPI.Models.UserEntity", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("f2e2774e-dc6d-4a5c-b2d6-0facbe6694bf"),
                            CreatedAt = new DateTime(2025, 1, 2, 20, 38, 17, 994, DateTimeKind.Local).AddTicks(9674),
                            Email = "user1@example.com",
                            Password = "password",
                            UpdatedAt = new DateTime(2025, 1, 2, 20, 38, 18, 4, DateTimeKind.Local).AddTicks(4995)
                        });
                });

            modelBuilder.Entity("InstallyAPI.Models.CollectionEntity", b =>
                {
                    b.HasOne("InstallyAPI.Models.UserEntity", null)
                        .WithMany("Collections")
                        .HasForeignKey("UserEntityGuid");
                });

            modelBuilder.Entity("InstallyAPI.Models.PackageEntity", b =>
                {
                    b.HasOne("InstallyAPI.Models.CollectionEntity", "Collection")
                        .WithMany("Packages")
                        .HasForeignKey("CollectionId");

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("InstallyAPI.Models.CollectionEntity", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("InstallyAPI.Models.UserEntity", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
